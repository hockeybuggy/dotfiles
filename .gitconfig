[user]
	name       = Douglas Anderson
	email      = hockeybuggy@gmail.com
	signingkey = 9892CB4012843ABE

[color]
	branch = auto
	diff   = auto
	status = auto
	ui     = true

[init]
	defaultBranch = main

[alias]
# Ultility aliases. I am unlikely to call this myself, but other scripts use this.
	default-branch = "!git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@'"

# Commit aliases
	co   = commit -v
	com  = commit -m
	ca   = commit -av
	caa  = commit -av --amend
	cam  = commit -am
	cane = commit -a --amend --no-edit

# Local status aliases
	sta  = status -s
	diff = diff --color-moved

# Logging aliases
	sl   = log --oneline --decorate -20
	slp  = log --oneline --decorate
	sla  = log --oneline --decorate --graph --all -20
	slap = log --oneline --decorate --graph --all
	lgbr = "!f() { default=$(git default-branch) && git log $default..; }; f"

# Branching aliases
	bra = branch
	sw  = switch

# Rebase aliases
	rb   = rebase
	rbi  = rebase --interactive
	rbc  = rebase --continue
	rbm  = "!f() { default=$(git default-branch) && git rebase $default; }; f"
	rbim = "!f() { default=$(git default-branch) && git rebase --interactive $default; }; f"

# Push-Pull aliases
	po   = push origin
	pl   = pull
	plo  = pull origin
	plom = "!f() { default=$(git default-branch) && git pull origin $default; }; f"
	plu  = pull upstream
	pof  = push origin --force

# Cloneing aliases
	cl  = clone
	clo = clone

# Other aliases
	pick             = cherry-pick
	who              = blame
	edit-conflicts   = !"editconflicts() { $EDITOR $(git diff --name-only --diff-filter=U); }; editconflicts"
    swm = "!switchtodefault() { \
        default=$(git default-branch) && \
        git switch $default \
    }; switchtodefault"
    merge-pr = "!mergepr() { \
        default=$(git default-branch) && \
        git checkout $default && \
        git pull && \
        git checkout $1 && \
        git rebase $default && \
        git checkout $default && \
        git merge $1 && \
        git push --no-verify && \
        git branch --delete $1 && \
        git push --no-verify --delete origin $1 && \
        git pull; \
    }; mergepr"

    tag-release = "!tagrelease() { \
        default=$(git default-branch) && \
        git fetch && \
        git checkout $default && \
        git tag --sign --message \"Version $1\" v$1 && \
        git push --tags; \
    }; tagrelease"

    rebase-to-default = "!rebasetomain() { \
        default=$(git default-branch) && \
        git checkout $default && \
        git pull origin $default && \
        git checkout - && \
        git rebase $default; \
    }; rebasetomain"
	modernize-branch-names = !"modernizebranchnames() { git branch -m master main &&  git push -u origin main; }; modernizebranchnames"

[gpg]
	program = gpg

[protocol]
	version = 2

[push]
	default = current

[pull]
	ff = only

[commit]
	template = ~/.gitmessage
	gpgsign = true

[rebase]
	autosquash = true

[log]
	date = human

[core]
	pager = diff-so-fancy | less --tabs=4 -RFX

[color "diff"]
	meta       = yellow
	frag       = magenta bold
	commit     = yellow
	old        = red
	new        = green
	whitespace = red reverse

[color "diff-highlight"]
	oldNormal    = red
	oldHighlight = red 52
	newNormal    = green
	newHighlight = green 22

[protocol "http"]
	allow = never

[protocol "git"]
	allow = never

[fetch]
	fsckObjects = true

[transfer]
	fsckObjects = true

[receive]
	fsckObjects = true
